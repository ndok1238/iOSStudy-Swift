 /*
  4. 기본 연산자
  
  용어.
  연산자는 단항, 이진, 삼항이 있다.
  단항 연산자 : 단일 대상에서 작동 ex) -a
  이항 연산자 : 두 가지의 대상에 작동 ex) 2 +3
  삼항 연산자 : 세 가지 대상에 작동 ex) a ? b : c
  */
 
 // 1) 할당 연산자 : 할당 연산자는 초기화자 !!
 let b = 10  // =
 var a = 5
 a = b
 // 만약 오른쪽 값이 여러 값을 가진 튜플의 경우에 그 요소는 한번에 여러개의 상수 또는 변수로 분해 될 수 있음
 let (x, y) = (1, 2)
 
 /*
  2) 산술 연산자
  4가지의 산술연사자가 모든 숫자 타입을 지원
  +,-,*,/
  
  3) 나머지 연산자
  (a % b) b의 몇 배수가 a에 맞게 곱해지며 그리고 남아 있는 값을 반환
  부동 소수점 또한 지원!!  -> 지금은 안되는 듯..?
  */
// var val = (8%2.5)
 
 /*
  4) 증감연산자와 감소 연산자
  ++ 와 -- 를 지원. ! 아는것!!!
  
  5) 단항 마이너스 연산자
  - 값을 의미하는 것
  
  6) 단항 플러스 연산자
  - 였던건 +로 바꿀 수 있나??
  */
 
 let minusSix = -6
 let alsoMinusSix = +minusSix
 // 안됨!
 
 /*
  7) 비교 연산자
  == : 같음 연산자
  != : 같지 않음 연산자
  >  : 보다 큰
  <  : 보다 작은
  >= : 보다 크거나 같은
  <= : 보다 작거나 같은
  Bool 값을 반환
  
  8) 삼항 조건 연산자
  
  */
 let contentHeight = 40
 let hasHeader = true
 let rowHeight = contentHeight + (hasHeader ? 50 : 20)
 
 
 /*
   9) 범위 연산자
  두개의 범위 연산자를 지원
  
  9-1) 폐쇄 범위 연산자
  (a...b)는 a에서 b가지의 범위를 정의하며 a와 b를 포함
  for-in 루프와 같이 사용하고자 하는 값 범위에서 반복할때 유용
  */
 for index in 1...5{
    print("\(index) time of 5")
 }
 
 /*
  9-2) 반 폐쇄 범위 연산자
  반폐쇄 범위 연산자 (a..b)는 a에서 b로 범위를 정의하며 b를 포함하지 않음
  
  ->삭제된듯 안됨...
*/
// let names = ["a","b","c","d"]
// let count = names.count
// for i in 0..count{
//
// }

 /*
  10) 논리 연산자
  논리 연산자는 true 와 false 불리언 논리 값을 수정하거나 결합
  세가지 표준 논리 연산자를 지원
  NOT(!a)
  AND(a && b)
  OR (a || b)
  
  아는 것!!
  
  
  */
 
 
